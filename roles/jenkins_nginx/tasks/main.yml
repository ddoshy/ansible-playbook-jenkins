---
- name: Install initial deps
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - software-properties-common

- name: Tap into LetsEncrypt Repo
  apt_repository:
    repo: ppa:certbot/certbot
    state: present
    update_cache: yes

- name: Install Nginx & LetsEncrypt
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - nginx
    - certbot

- name: Enable Nginx on startup
  systemd:
    name: nginx
    daemon_reload: yes
    enabled: yes

- name: Ensure config folders exists
  file:
    path: "/etc/nginx/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  with_items:
    - conf.d
    - main.d

- name: Update base Nginx configuration
  copy:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: "0644"

# Forcing restart of Nginx
- name: Restart Nginx
  service:
    name: nginx
    state: restarted

- name: Ensure vhost directories exist
  file:
    path: "/etc/nginx/{{ item }}"
    state: directory
  with_items:
    - sites-available
    - sites-enabled

- name: Disable the default vhost
  file:
    path: "{{ item }}"
    state: absent
  notify: Restart Nginx
  with_items:
    - /etc/nginx/sites-enabled/default
    - /etc/nginx/conf.d/default.conf

- name: Install Nginx site for LetsEncrypt requests
  template:
    src: nginx-http.conf.j2
    dest: /etc/nginx/sites-available/http

- name: Enable server by linking config file
  file:
    state: link
    src: /etc/nginx/sites-available/http
    dest: /etc/nginx/sites-enabled/http
    owner: root
    group: root
    mode: "0755"

# Forcing restart of Nginx
- name: Restart Nginx
  service:
    name: nginx
    state: restarted

- name: Create LetsEncrypt directory
  file:
    name: "{{ lets_encrypt_directory }}"
    state: directory

- name: Create LetsEncrypt certificate
  shell: certbot certonly --webroot -w {{ lets_encrypt_directory }} -m {{ lets_encrypt_email }} --agree-tos -d {{ lets_encrypt_domain }}
  args:
    creates: /etc/letsencrypt/live/{{ lets_encrypt_domain }}

# Forcing restart of Nginx
- name: Restart Nginx
  service:
    name: nginx
    state: restarted

- name: Generate dhparams
  shell: openssl dhparam -out /etc/nginx/dhparams.pem 2048
  args:
    creates: /etc/nginx/dhparams.pem

- name: Load in Nginx template for Jenkins
  template:
    src: jenkins-nginx.conf.j2
    dest: /etc/nginx/sites-available/jenkins-nginx
    owner: root
    group: root
    mode: "0755"

# Forcing restart of Nginx
- name: Restart Nginx
  service:
    name: nginx
    state: restarted

- name: Enable server by linking config file
  file:
    state: link
    src: /etc/nginx/sites-available/jenkins-nginx
    dest: /etc/nginx/sites-enabled/jenkins-nginx
    owner: root
    group: root
    mode: "0755"

# Forcing restart of Nginx
- name: Restart Nginx
  service:
    name: nginx
    state: restarted

- name: Add LetsEncrypt cronjob for cert renewal
  cron:
    name: letsencrypt_renewal
    special_time: weekly
    job: certbot renew && service nginx restart
